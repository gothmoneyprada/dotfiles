alias vi='vim'
alias l='ls -lh'
alias la='ls -lah'
alias ld='ls -dl'
alias ltr='ls -ltrh|tail'
alias c='clear'
alias cd..='cd ..'
alias .='cd ..'
alias ..='cd ../..'
alias ...='cd ../../..'
alias ....='cd ../../../..'
alias docs='cd ~/Documents'
alias dl='cd ~/Downloads'
alias ipgrep='egrep -o '\''[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'\'''
alias foo='cat > ~/foo'
alias cfoo='cat ~/foo'
alias rfoo='rm ~/foo*'
alias vfoo='vim ~/foo'
alias eip='curl http://ipinfo.io/ip'
alias iip=internal_ip
alias lports='netstat -ant | grep LISTEN'
alias s='source'
alias se='source $HOME/.env'
alias f=ifind

# git/git-flow aliases
alias gpristine='git reset --hard && git clean -df'
alias ghb='gh -b'
alias gffs='git flow feature start'
alias gfrs='git flow release start'
alias gfi='git flow init -d'

# run last command as sudo
alias S='sudo $(fc -ln -1)'

# edit and last command in vim and run
alias ee='fc -1'

# Launch jupyter notebook in current directory
alias jnb='docker run --rm -d -p 8888:8888 -e JUPYTER_ENABLE_LAB=yes -v "$PWD":/home/jovyan/work --name jupyter jupyter/datascience-notebook && docker logs -f jupyter'

# golang stuff
alias gtest='go test -v --bench . --benchmem'
alias gfind='find . -name "*.go" -not -path "*/vendor/*"'

# Docker aliases
alias drun="docker run --rm"
alias drund="docker run --rm -d"
alias dstart="docker start"
alias dkill="docker kill"
alias dps="docker ps"
alias dpsa="docker ps -a"
alias dpurge="docker images |egrep '<none>'|awk '{print \$3}'|xargs docker rmi --force"

# open a git repo in the browser the -b switch opens the specific branch
function gh {
  if [[ -x "$(command -v open)" ]]; then
    cmd=open
  elif [[ -x "$(command -v xdg-open)" ]]; then
    cmd=xdg-open
  fi

  url=$(git remote -v | grep origin | head -1 | awk '{print $2}' | sed -e 's/:/\//' -e 's/git@/https:\/\//' -e 's/\.git$//')
  if [[ "$url" = "" ]] || [[ "$cmd" = "" ]]; then
    echo "Unable to open git repo!"
    return 1
  fi

  branch=$(git rev-parse --abbrev-ref HEAD)
  if [[ "$1" = "-b" ]]; then
    url="$url/tree/$branch"
  fi

  echo "Fetching: ${url}"
  $cmd $url > /dev/null 2>&1
}

function internal_ip {
  if [[ "$OSTYPE" == "darwin"* ]]; then
    ifconfig| egrep '(^[a-zA-Z]|\sinet[^6])' | egrep -B1 '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' | awk -v RS=$'--' 'NF {print $1, $6}'|column -t
  else
    ip addr | egrep -o '(^[0-9]+:\s+[0-9a-z]+|\sinet[^6].*)' | egrep -B1 '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' | awk -v RS=$'[0-9]:' 'NF {print $1, $3}' | column -t
  fi
}

function ifind {
  find . -iname "*$1*"
}

# terraform
function tf {
  docker run --rm -it -w /tf -v "$HOME/.aws":/root/.aws -v "$PWD":/tf hashicorp/terraform "$@" -auto-approve
}

